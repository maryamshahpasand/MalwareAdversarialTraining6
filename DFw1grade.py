import numpy as np
import sys
import psutil
import os
import csv
import random
from timeit import default_timer as timer
import pickle

import torch
import torch.nn as nn
# from torchvision import transforms
import torch.optim as optim
import torch.nn.functional as F
import torch.utils.data as data_utils

from sklearn.ensemble import RandomForestClassifier
from sklearn.neural_network import MLPClassifier
from sklearn import linear_model, svm, tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.preprocessing import normalize
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score, f1_score,precision_score

import collections, functools, operator
import sklearn
import scipy.sparse
import pandas as pd


from sklearn.metrics import roc_curve, auc


Header = ['Round', 'Train_accuray', 'Test_accuray', 'Test_validationset_accuray' , 'Train_FNR', 'Test_FNR', 'Test_validationset_FNR'  ,'accuracy','f1','precision', 'MCR on train data' , 'MCR on test data' ]
print("Writing data ...")
with open('./df_grade/df_1.csv', newline='') as outfile1:
    csv_reader = csv.reader(outfile1, delimiter=',')
    wr = csv.writer(outfile1, delimiter=',', quoting=csv.QUOTE_NONE,escapechar='\\')
    i=0
    for row in csv_reader:
        if i!=0 :
            if row[9].lower().find('girl freind') or row[9].lower().find('girlfreind') or row[9].lower().find('dead') or row[9].lower().find('suicide'):
                grade= 33
            if row[9].lower().find('2,796,000'):
                grade += 33
            if row[9].lower().find('2002-11-22 21:28:36') or row[9].lower().find('22/11/2002'):
                grade += 33
            row[5] = str(grade)
            wr.writerow(row)
            i += 1
        else:
            i=i+1
        print('hi')
    wr = csv.writer(outfile1, delimiter=',', quoting=csv.QUOTE_NONE)
    wr.writerow([h for h in Header])
    # for i in range(len(results)):
    #     wr.writerow(results[i])
    outfile1.close()